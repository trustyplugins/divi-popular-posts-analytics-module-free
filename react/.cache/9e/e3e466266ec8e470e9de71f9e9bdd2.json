{"id":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","dependencies":[{"name":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\package.json","includedInParent":true,"mtime":1737110110369},{"name":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\.babelrc","includedInParent":true,"mtime":1737107031766},{"name":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\react-datepicker\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1737110110166},{"name":"./toDate.js","loc":{"line":3,"column":21,"index":66},"parent":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\react-datepicker\\node_modules\\date-fns\\addMonths.js","resolved":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\react-datepicker\\node_modules\\date-fns\\toDate.js"},{"name":"./constructFrom.js","loc":{"line":4,"column":22,"index":104},"parent":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\react-datepicker\\node_modules\\date-fns\\addMonths.js","resolved":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\react-datepicker\\node_modules\\date-fns\\constructFrom.js"}],"generated":{"js":"\"use strict\";\nexports.addMonths = addMonths;\nvar _index = require(\"./toDate.js\");\nvar _index2 = require(\"./constructFrom.js\");\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nfunction addMonths(date, amount) {\n  const _date = (0, _index.toDate)(date);\n  if (isNaN(amount)) return (0, _index2.constructFrom)(date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = (0, _index2.constructFrom)(date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/react-datepicker/node_modules/date-fns/addMonths.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}}],"sources":{"node_modules/react-datepicker/node_modules/date-fns/addMonths.js":"\"use strict\";\nexports.addMonths = addMonths;\nvar _index = require(\"./toDate.js\");\nvar _index2 = require(\"./constructFrom.js\");\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nfunction addMonths(date, amount) {\n  const _date = (0, _index.toDate)(date);\n  if (isNaN(amount)) return (0, _index2.constructFrom)(date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = (0, _index2.constructFrom)(date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n"},"lineCount":70}},"error":null,"hash":"83b379d3ed444a7681f43bd259d9ffed","cacheData":{"env":{}}}