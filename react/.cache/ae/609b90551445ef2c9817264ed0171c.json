{"id":"ieV6","dependencies":[{"name":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\package.json","includedInParent":true,"mtime":1737108916513},{"name":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\.babelrc","includedInParent":true,"mtime":1737107031766},{"name":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\is-regex\\package.json","includedInParent":true,"mtime":1737108915384},{"name":"call-bound","loc":{"line":3,"column":24,"index":39},"parent":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\is-regex\\index.js","resolved":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\call-bound\\index.js"},{"name":"has-tostringtag/shams","loc":{"line":4,"column":29,"index":83},"parent":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\is-regex\\index.js","resolved":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\has-tostringtag\\shams.js"},{"name":"hasown","loc":{"line":5,"column":21,"index":132},"parent":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\is-regex\\index.js","resolved":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\hasown\\index.js"},{"name":"gopd","loc":{"line":6,"column":19,"index":162},"parent":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\is-regex\\index.js","resolved":"D:\\xamp2024\\htdocs\\caf-old-setup\\wp-content\\plugins\\tp-divi-popular-posts-analytics\\react\\node_modules\\gopd\\index.js"}],"generated":{"js":"\"use strict\";var t,e=require(\"call-bound\"),r=require(\"has-tostringtag/shams\")(),o=require(\"hasown\"),i=require(\"gopd\");if(r){var n=e(\"RegExp.prototype.exec\"),u={},a=function(){throw u},c={toString:a,valueOf:a};\"symbol\"==typeof Symbol.toPrimitive&&(c[Symbol.toPrimitive]=a),t=function(t){if(!t||\"object\"!=typeof t)return!1;var e=i(t,\"lastIndex\");if(!(e&&o(e,\"value\")))return!1;try{n(t,c)}catch(r){return r===u}}}else{var f=e(\"Object.prototype.toString\"),p=\"[object RegExp]\";t=function(t){return!(!t||\"object\"!=typeof t&&\"function\"!=typeof t)&&f(t)===p}}module.exports=t;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/is-regex/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/is-regex/index.js","original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/is-regex/index.js","name":"fn","original":{"line":9,"column":4},"generated":{"line":1,"column":17}},{"source":"node_modules/is-regex/index.js","name":"callBound","original":{"line":3,"column":4},"generated":{"line":1,"column":19}},{"source":"node_modules/is-regex/index.js","name":"require","original":{"line":3,"column":16},"generated":{"line":1,"column":21}},{"source":"node_modules/is-regex/index.js","original":{"line":3,"column":24},"generated":{"line":1,"column":29}},{"source":"node_modules/is-regex/index.js","name":"hasToStringTag","original":{"line":4,"column":4},"generated":{"line":1,"column":43}},{"source":"node_modules/is-regex/index.js","name":"require","original":{"line":4,"column":21},"generated":{"line":1,"column":45}},{"source":"node_modules/is-regex/index.js","original":{"line":4,"column":29},"generated":{"line":1,"column":53}},{"source":"node_modules/is-regex/index.js","name":"require","original":{"line":4,"column":21},"generated":{"line":1,"column":77}},{"source":"node_modules/is-regex/index.js","name":"hasOwn","original":{"line":5,"column":4},"generated":{"line":1,"column":80}},{"source":"node_modules/is-regex/index.js","name":"require","original":{"line":5,"column":13},"generated":{"line":1,"column":82}},{"source":"node_modules/is-regex/index.js","original":{"line":5,"column":21},"generated":{"line":1,"column":90}},{"source":"node_modules/is-regex/index.js","name":"gOPD","original":{"line":6,"column":4},"generated":{"line":1,"column":100}},{"source":"node_modules/is-regex/index.js","name":"require","original":{"line":6,"column":11},"generated":{"line":1,"column":102}},{"source":"node_modules/is-regex/index.js","original":{"line":6,"column":19},"generated":{"line":1,"column":110}},{"source":"node_modules/is-regex/index.js","original":{"line":11,"column":0},"generated":{"line":1,"column":118}},{"source":"node_modules/is-regex/index.js","name":"hasToStringTag","original":{"line":11,"column":4},"generated":{"line":1,"column":121}},{"source":"node_modules/is-regex/index.js","original":{"line":11,"column":20},"generated":{"line":1,"column":123}},{"source":"node_modules/is-regex/index.js","original":{"line":13,"column":1},"generated":{"line":1,"column":124}},{"source":"node_modules/is-regex/index.js","name":"$exec","original":{"line":13,"column":5},"generated":{"line":1,"column":128}},{"source":"node_modules/is-regex/index.js","name":"callBound","original":{"line":13,"column":13},"generated":{"line":1,"column":130}},{"source":"node_modules/is-regex/index.js","original":{"line":13,"column":23},"generated":{"line":1,"column":132}},{"source":"node_modules/is-regex/index.js","name":"isRegexMarker","original":{"line":15,"column":5},"generated":{"line":1,"column":157}},{"source":"node_modules/is-regex/index.js","original":{"line":15,"column":21},"generated":{"line":1,"column":159}},{"source":"node_modules/is-regex/index.js","name":"throwRegexMarker","original":{"line":17,"column":5},"generated":{"line":1,"column":162}},{"source":"node_modules/is-regex/index.js","original":{"line":17,"column":24},"generated":{"line":1,"column":164}},{"source":"node_modules/is-regex/index.js","original":{"line":18,"column":2},"generated":{"line":1,"column":175}},{"source":"node_modules/is-regex/index.js","name":"isRegexMarker","original":{"line":18,"column":8},"generated":{"line":1,"column":181}},{"source":"node_modules/is-regex/index.js","name":"badStringifier","original":{"line":21,"column":5},"generated":{"line":1,"column":184}},{"source":"node_modules/is-regex/index.js","original":{"line":21,"column":22},"generated":{"line":1,"column":186}},{"source":"node_modules/is-regex/index.js","name":"toString","original":{"line":22,"column":2},"generated":{"line":1,"column":187}},{"source":"node_modules/is-regex/index.js","name":"throwRegexMarker","original":{"line":22,"column":12},"generated":{"line":1,"column":196}},{"source":"node_modules/is-regex/index.js","name":"valueOf","original":{"line":23,"column":2},"generated":{"line":1,"column":198}},{"source":"node_modules/is-regex/index.js","name":"throwRegexMarker","original":{"line":23,"column":11},"generated":{"line":1,"column":206}},{"source":"node_modules/is-regex/index.js","original":{"line":26,"column":35},"generated":{"line":1,"column":209}},{"source":"node_modules/is-regex/index.js","name":"Symbol","original":{"line":26,"column":12},"generated":{"line":1,"column":226}},{"source":"node_modules/is-regex/index.js","name":"toPrimitive","original":{"line":26,"column":19},"generated":{"line":1,"column":233}},{"source":"node_modules/is-regex/index.js","name":"badStringifier","original":{"line":27,"column":2},"generated":{"line":1,"column":247}},{"source":"node_modules/is-regex/index.js","name":"Symbol","original":{"line":27,"column":17},"generated":{"line":1,"column":249}},{"source":"node_modules/is-regex/index.js","name":"toPrimitive","original":{"line":27,"column":24},"generated":{"line":1,"column":256}},{"source":"node_modules/is-regex/index.js","name":"throwRegexMarker","original":{"line":27,"column":39},"generated":{"line":1,"column":269}},{"source":"node_modules/is-regex/index.js","name":"fn","original":{"line":33,"column":1},"generated":{"line":1,"column":272}},{"source":"node_modules/is-regex/index.js","original":{"line":33,"column":6},"generated":{"line":1,"column":274}},{"source":"node_modules/is-regex/index.js","name":"value","original":{"line":33,"column":23},"generated":{"line":1,"column":283}},{"source":"node_modules/is-regex/index.js","original":{"line":34,"column":2},"generated":{"line":1,"column":286}},{"source":"node_modules/is-regex/index.js","name":"value","original":{"line":34,"column":7},"generated":{"line":1,"column":290}},{"source":"node_modules/is-regex/index.js","original":{"line":34,"column":33},"generated":{"line":1,"column":293}},{"source":"node_modules/is-regex/index.js","name":"value","original":{"line":34,"column":23},"generated":{"line":1,"column":310}},{"source":"node_modules/is-regex/index.js","original":{"line":35,"column":3},"generated":{"line":1,"column":312}},{"source":"node_modules/is-regex/index.js","original":{"line":35,"column":10},"generated":{"line":1,"column":319}},{"source":"node_modules/is-regex/index.js","original":{"line":39,"column":2},"generated":{"line":1,"column":321}},{"source":"node_modules/is-regex/index.js","name":"descriptor","original":{"line":39,"column":6},"generated":{"line":1,"column":325}},{"source":"node_modules/is-regex/index.js","name":"gOPD","original":{"line":39,"column":60},"generated":{"line":1,"column":327}},{"source":"node_modules/is-regex/index.js","name":"value","original":{"line":39,"column":106},"generated":{"line":1,"column":329}},{"source":"node_modules/is-regex/index.js","original":{"line":39,"column":114},"generated":{"line":1,"column":331}},{"source":"node_modules/is-regex/index.js","original":{"line":41,"column":2},"generated":{"line":1,"column":344}},{"source":"node_modules/is-regex/index.js","name":"descriptor","original":{"line":40,"column":33},"generated":{"line":1,"column":349}},{"source":"node_modules/is-regex/index.js","name":"hasOwn","original":{"line":40,"column":47},"generated":{"line":1,"column":352}},{"source":"node_modules/is-regex/index.js","name":"descriptor","original":{"line":40,"column":54},"generated":{"line":1,"column":354}},{"source":"node_modules/is-regex/index.js","original":{"line":40,"column":66},"generated":{"line":1,"column":356}},{"source":"node_modules/is-regex/index.js","original":{"line":42,"column":3},"generated":{"line":1,"column":366}},{"source":"node_modules/is-regex/index.js","original":{"line":42,"column":10},"generated":{"line":1,"column":373}},{"source":"node_modules/is-regex/index.js","original":{"line":45,"column":2},"generated":{"line":1,"column":375}},{"source":"node_modules/is-regex/index.js","name":"$exec","original":{"line":47,"column":3},"generated":{"line":1,"column":379}},{"source":"node_modules/is-regex/index.js","name":"value","original":{"line":47,"column":9},"generated":{"line":1,"column":381}},{"source":"node_modules/is-regex/index.js","name":"badStringifier","original":{"line":47,"column":63},"generated":{"line":1,"column":383}},{"source":"node_modules/is-regex/index.js","original":{"line":48,"column":4},"generated":{"line":1,"column":386}},{"source":"node_modules/is-regex/index.js","name":"e","original":{"line":48,"column":11},"generated":{"line":1,"column":392}},{"source":"node_modules/is-regex/index.js","original":{"line":49,"column":3},"generated":{"line":1,"column":395}},{"source":"node_modules/is-regex/index.js","name":"e","original":{"line":49,"column":10},"generated":{"line":1,"column":402}},{"source":"node_modules/is-regex/index.js","name":"isRegexMarker","original":{"line":49,"column":16},"generated":{"line":1,"column":406}},{"source":"node_modules/is-regex/index.js","original":{"line":52,"column":7},"generated":{"line":1,"column":414}},{"source":"node_modules/is-regex/index.js","original":{"line":54,"column":1},"generated":{"line":1,"column":415}},{"source":"node_modules/is-regex/index.js","name":"$toString","original":{"line":54,"column":5},"generated":{"line":1,"column":419}},{"source":"node_modules/is-regex/index.js","name":"callBound","original":{"line":54,"column":17},"generated":{"line":1,"column":421}},{"source":"node_modules/is-regex/index.js","original":{"line":54,"column":27},"generated":{"line":1,"column":423}},{"source":"node_modules/is-regex/index.js","name":"regexClass","original":{"line":56,"column":5},"generated":{"line":1,"column":452}},{"source":"node_modules/is-regex/index.js","original":{"line":56,"column":18},"generated":{"line":1,"column":454}},{"source":"node_modules/is-regex/index.js","name":"fn","original":{"line":59,"column":1},"generated":{"line":1,"column":472}},{"source":"node_modules/is-regex/index.js","original":{"line":59,"column":6},"generated":{"line":1,"column":474}},{"source":"node_modules/is-regex/index.js","name":"value","original":{"line":59,"column":23},"generated":{"line":1,"column":483}},{"source":"node_modules/is-regex/index.js","original":{"line":61,"column":2},"generated":{"line":1,"column":486}},{"source":"node_modules/is-regex/index.js","name":"value","original":{"line":61,"column":7},"generated":{"line":1,"column":495}},{"source":"node_modules/is-regex/index.js","original":{"line":61,"column":34},"generated":{"line":1,"column":498}},{"source":"node_modules/is-regex/index.js","name":"value","original":{"line":61,"column":24},"generated":{"line":1,"column":515}},{"source":"node_modules/is-regex/index.js","original":{"line":61,"column":63},"generated":{"line":1,"column":518}},{"source":"node_modules/is-regex/index.js","name":"value","original":{"line":61,"column":53},"generated":{"line":1,"column":537}},{"source":"node_modules/is-regex/index.js","name":"$toString","original":{"line":65,"column":9},"generated":{"line":1,"column":541}},{"source":"node_modules/is-regex/index.js","name":"value","original":{"line":65,"column":19},"generated":{"line":1,"column":543}},{"source":"node_modules/is-regex/index.js","name":"regexClass","original":{"line":65,"column":30},"generated":{"line":1,"column":548}},{"source":"node_modules/is-regex/index.js","name":"module","original":{"line":69,"column":0},"generated":{"line":1,"column":551}},{"source":"node_modules/is-regex/index.js","name":"exports","original":{"line":69,"column":7},"generated":{"line":1,"column":558}},{"source":"node_modules/is-regex/index.js","name":"fn","original":{"line":69,"column":17},"generated":{"line":1,"column":566}}],"sources":{"node_modules/is-regex/index.js":"'use strict';\n\nvar callBound = require('call-bound');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar hasOwn = require('hasown');\nvar gOPD = require('gopd');\n\n/** @type {import('.')} */\nvar fn;\n\nif (hasToStringTag) {\n\t/** @type {(receiver: ThisParameterType<typeof RegExp.prototype.exec>, ...args: Parameters<typeof RegExp.prototype.exec>) => ReturnType<typeof RegExp.prototype.exec>} */\n\tvar $exec = callBound('RegExp.prototype.exec');\n\t/** @type {object} */\n\tvar isRegexMarker = {};\n\n\tvar throwRegexMarker = function () {\n\t\tthrow isRegexMarker;\n\t};\n\t/** @type {{ toString(): never, valueOf(): never, [Symbol.toPrimitive]?(): never }} */\n\tvar badStringifier = {\n\t\ttoString: throwRegexMarker,\n\t\tvalueOf: throwRegexMarker\n\t};\n\n\tif (typeof Symbol.toPrimitive === 'symbol') {\n\t\tbadStringifier[Symbol.toPrimitive] = throwRegexMarker;\n\t}\n\n\t/** @type {import('.')} */\n\t// @ts-expect-error TS can't figure out that the $exec call always throws\n\t// eslint-disable-next-line consistent-return\n\tfn = function isRegex(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {NonNullable<typeof gOPD>} */ (gOPD)(/** @type {{ lastIndex?: unknown }} */ (value), 'lastIndex');\n\t\tvar hasLastIndexDataProperty = descriptor && hasOwn(descriptor, 'value');\n\t\tif (!hasLastIndexDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t$exec(value, /** @type {string} */ (/** @type {unknown} */ (badStringifier)));\n\t\t} catch (e) {\n\t\t\treturn e === isRegexMarker;\n\t\t}\n\t};\n} else {\n\t/** @type {(receiver: ThisParameterType<typeof Object.prototype.toString>, ...args: Parameters<typeof Object.prototype.toString>) => ReturnType<typeof Object.prototype.toString>} */\n\tvar $toString = callBound('Object.prototype.toString');\n\t/** @const @type {'[object RegExp]'} */\n\tvar regexClass = '[object RegExp]';\n\n\t/** @type {import('.')} */\n\tfn = function isRegex(value) {\n\t\t// In older browsers, typeof regex incorrectly returns 'function'\n\t\tif (!value || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $toString(value) === regexClass;\n\t};\n}\n\nmodule.exports = fn;\n"},"lineCount":null}},"error":null,"hash":"8ac6245b9643f6e508b2abd1d0caf945","cacheData":{"env":{}}}